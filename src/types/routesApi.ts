/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/routes': {
    get: operations['getAll'];
    put: operations['update'];
    post: operations['create'];
  };
  '/routes/minimum-name': {
    post: operations['getObjectWithMinimumName'];
  };
  '/routes/groups': {
    post: operations['getGroups'];
  };
  '/routes/all-distances': {
    post: operations['computeDistances'];
  };
  '/routes/{route-id}': {
    get: operations['getById'];
    delete: operations['delete'];
  };
}

export interface components {
  schemas: {
    Coordinates: {
      /** Format: int64 */
      x?: number;
      /** Format: double */
      y?: number;
    };
    Location: {
      /** Format: int32 */
      id?: number;
      /** Format: float */
      x?: number;
      /** Format: double */
      y?: number;
      /** Format: double */
      z?: number;
      name?: string;
    };
    Route: {
      /** Format: int32 */
      id: number;
      name: string;
      coordinates: components['schemas']['Coordinates'];
      /** Format: date-time */
      creationDate: string;
      from: components['schemas']['Location'];
      to: components['schemas']['Location'];
      /** Format: float */
      distance?: number;
    };
    Response: {
      message?: string;
      payload?: { [key: string]: unknown };
    };
    RoutesFilterDto: {
      nameFilter?: string;
      /** Format: int64 */
      coordinatesXFilter?: number;
      /** Format: double */
      coordinatesYFilter?: number;
      /** Format: date-time */
      creationDateFilter?: string;
      /** Format: int32 */
      locationFromFilter?: number;
      /** Format: int32 */
      locationToFilter?: number;
      /** Format: float */
      distanceFilter?: number;
    };
    Pageable: {
      /** Format: int32 */
      page?: number;
      /** Format: int32 */
      size?: number;
      sort?: string[];
    };
  };
}

export interface operations {
  getAll: {
    parameters: {
      query: {
        'Routes filters': components['schemas']['RoutesFilterDto'];
        'Paging and sorting': components['schemas']['Pageable'];
      };
    };
    responses: {
      /** Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['Route'][];
        };
      };
    };
  };
  update: {
    responses: {
      /** Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['Route'];
        };
      };
      /** Invalid data */
      400: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
      /** Route was not found */
      404: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['Route'];
      };
    };
  };
  create: {
    responses: {
      /** Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['Route'];
        };
      };
      /** Invalid data */
      400: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
      /** Route was not found */
      404: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['Route'];
      };
    };
  };
  getObjectWithMinimumName: {
    responses: {
      /** Successful operation */
      200: {
        content: {
          'application/json':
            | components['schemas']['Route']
            | components['schemas']['Location'];
        };
      };
      /** Nothing was found */
      404: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
    };
  };
  getGroups: {
    responses: {
      /** Successful operation */
      200: {
        content: {
          'application/json': string;
        };
      };
    };
  };
  computeDistances: {
    responses: {
      /** Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
    };
  };
  getById: {
    parameters: {
      path: {
        /** Id of the route */
        'route-id': number;
      };
    };
    responses: {
      /** Successful operation */
      200: {
        content: {
          'application/json': components['schemas']['Route'];
        };
      };
      /** Route was not found */
      404: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
    };
  };
  delete: {
    parameters: {
      path: {
        /** Id of the route */
        'route-id': number;
      };
    };
    responses: {
      /** Successful operation */
      200: unknown;
      /** Route was not found */
      404: {
        content: {
          'application/json': components['schemas']['Response'];
        };
      };
    };
  };
}

export interface external {}
